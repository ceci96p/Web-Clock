{"version":3,"sources":["./src/app/timer/timer.component.ts","./src/app/timer/timer.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, interval } from 'rxjs';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  private subscription: Subscription|undefined;\n  \n  public dateNow = new Date();\n  public dDay = new Date('Jan 01 2021 00:00:00');\n  milliSecondsInASecond = 1000;\n  hoursInADay = 24;\n  minutesInAnHour = 60;\n  SecondsInAMinute  = 60;\n\n  public timeDifference:number|undefined;\n  public hours:any = '00';\n  public minutes:any = '00';\n  public seconds:any = '00';\n  \n  constructor() { \n  }\n\n  private getTimeDifference () {\n    this.dateNow= new Date('Jan 01 2021');\n    this.dateNow.setHours(this.hours);\n    this.dateNow.setMinutes(this.minutes);\n    this.dateNow.setSeconds(this.seconds);\n\n    // this.getElapsedTime(this.dateNow);\n    // this.timeDifference = Math.abs(this.dateNow.getTime() - this.dDay.getTime() );\n    // this.allocateTimeUnits(this.timeDifference);\n  }\n\n  // private allocateTimeUnits (timeDifference:any) {\n  //   this.seconds = Math.floor((timeDifference) / (this.milliSecondsInASecond) % this.SecondsInAMinute);\n  //   this.minutes = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour) % this.SecondsInAMinute);\n  //   this.hours = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute) % this.hoursInADay);\n  // }\n  \n\n\n  getElapsedTime(dateNow: Date) {        \n    let totalSeconds = Math.floor((new Date().getTime() - this.dateNow.getTime()) / 1000);\n  \n    let hours = 0;\n    let minutes = 0;\n    let seconds = 0;\n  \n    if (totalSeconds >= 3600) {\n      hours = Math.floor(totalSeconds / 3600);      \n      totalSeconds -= 3600 * hours;      \n    }\n  \n    if (totalSeconds >= 60) {\n      minutes = Math.floor(totalSeconds / 60);\n      totalSeconds -= 60 * minutes;\n    }\n  \n    seconds = totalSeconds;\n\n    this.seconds = seconds;\n    this.minutes = minutes;\n    this.hours = hours;\n  }\n\n  ngOnInit() {\n  }\n\n  countDown(){\n    if (this.seconds > 0){\n      this.seconds = this.seconds - 1;\n    }\n\n    // if (this.seconds == 0){\n    //   this.seconds = 59;\n    //   this.minutes = this.minutes - 1;\n    // }\n\n  }\n\n  Start(){\n    this.subscription = interval(1000)\n      .subscribe(x => { this.countDown();});\n  }\n\n  Stop(){\n    if (this.subscription !== undefined) {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  ngOnDestroy() {\n    if (this.subscription !== undefined) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n","\n<div class=\"container1\">\n    <span> {{hours}} </span>\n    <h2> :</h2>\n    <span> {{minutes}} </span>\n    <h2> :</h2>\n    <span> {{seconds}}</span>\n</div>\n\n\n\n<div class=\"container2\" >\n\n<div class=\"block type1\">\n\n<mat-form-field style=\"height:90px; width: 70px;\">\n    <input matInput type=\"number\" id=\"hours\" name=\"hours\" \n    min=\"0\" max=\"23\" \n    style=\"border: 2px solid black; text-align: center;font-size: 3.4em;\">\n</mat-form-field>\n<mat-label for=\"minutes\">Hours (0-23)</mat-label>\n\n</div>\n\n<h1 class=\"block text1\">:</h1>\n\n<div class=\"block type2\">\n\n<mat-form-field style=\"height:90px; width: 70px;\">\n    \n    <input matInput type=\"number\" id=\"minutes\" name=\"minutes\" \n    min=\"0\" max=\"59\" \n    style=\"border: 2px solid black; text-align: center; font-size: 3.4em;\">\n</mat-form-field>\n<mat-label for=\"minutes\">Minutes (0-59)</mat-label>\n\n</div>\n\n<h1 class=\"block text2\">:</h1>\n\n<div class=\"block type2\">\n\n<mat-form-field style=\"height:90px; width: 70px;\">\n   \n    <input matInput type=\"number\" id=\"seconds\" name=\"seconds\" \n    min=\"0\" max=\"59\" \n    style=\"border: 2px solid black; text-align: center; font-size: 3.4em;\">\n</mat-form-field>\n<mat-label for=\"seconds\">Seconds (0-59)</mat-label>\n\n</div>\n\n</div>\n\n<div class=\"container3\">\n    <button class=\"buttons start\" mat-raised-button (click)=\"Start()\" >Start</button>\n    <button class=\"buttons stop\" mat-raised-button (click)=\"Stop()\">Stop</button>\n</div>\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Clock';\n  \n\n  myFunction(hello: string) {\n    console.log(hello);\n}\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\n    <title>title</title>\n  </head>\n  <body class=\"mat-app-background\">\n    <div class=\"page\">\n        <h1>Clock</h1>\n        <div  class=\"menu-container\" >\n            <button mat-raised-button class=\"clock type1\">World Clock</button>\n            <button mat-raised-button class=\"clock type2\">Alarm</button>\n            <button mat-raised-button class=\"clock type3\">Stopwatch</button>\n            <button mat-raised-button class=\"clock type4\" (click)=\"myFunction('hello')\">Timer</button>\n        </div>\n        <div class=\"content\">\n          <!-- <div class=\"box\"> box</div> -->\n          <app-timer>\n          </app-timer>\n        </div>\n    </div>\n  </body>\n</html>\n\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TimerComponent } from './timer/timer.component';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRippleModule} from '@angular/material/core';\nimport {BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatRippleModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n    \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}