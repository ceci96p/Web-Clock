{"version":3,"sources":["./src/app/timer/timer.component.ts","./src/app/timer/timer.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,MAAM,cAAc;IAEzB;QACE,IAAI,KAAK,GAAU,CAAC,CAAC;QACrB,IAAI,OAAO,GAAU,CAAC,CAAC;QACvB,IAAI,OAAO,GAAU,CAAC,CAAC;IACzB,CAAC;IAED,QAAQ;IACR,CAAC;;4EATU,cAAc;8FAAd,cAAc;QCL3B,2EAAmB;QAAA,wEAAa;QAAA,4DAAQ;QAExC,sEAA8D;QAE9D,2EAAqB;QAAA,0EAAe;QAAA,4DAAQ;QAE5C,sEAAgE;QAGhE,2EAAqB;QAAA,0EAAe;QAAA,4DAAQ;QAE5C,sEAAkE;;;;;;;;;;;;;;ACblE;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;ACN5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCRzB,0EAAgB;QACd,uEAAM;QACJ,qEAAwB;QACxB,qEAAuD;QACvD,qEAEmE;QACnE,wEAAO;QAAA,gEAAK;QAAA,4DAAQ;QACtB,4DAAO;QAEP,uEAAM;QACJ,yEAAkB;QACd,qEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,0EAAwB;QAMpB,6EAA0C;QAAA,mEAAO;QAAA,4DAAS;QAE9D,4DAAM;QACN,0EAAqB;QACnB,0EAAiB;QAAC,gEAAG;QAAA,4DAAM;QAC3B,wEACY;QACd,4DAAM;QAGV,4DAAM;QAKR,4DAAO;QACT,4DAAO;QAGP,4EAA+B;;;;;;;;;;;;;;ACtC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACU;AAEA;;AAelD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YALJ;YACP,uEAAa;YACb,oEAAgB;YAChB,wEAAe;SAChB;mIAIU,SAAS,mBAXlB,2DAAY;QACZ,qEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,wEAAe;;;;;;;;;;;;;AChBnB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  constructor() { \n    var hours:number = 0;\n    var minutes:number = 0;\n    var seconds:number = 0;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<label for=\"hours\">Hours (0-23):</label>\n\n<input type=\"number\" id=\"hours\" name=\"hours\" min=\"0\" max=\"23\">\n\n<label for=\"minutes\">Minutes (0-59):</label>\n\n<input type=\"number\" id=\"minutes\" name=\"hours\" min=\"0\" max=\"59\">\n\n\n<label for=\"seconds\">Seconds (0-59):</label>\n\n<input type=\"number\" id=\"seconds\" name=\"seconds\" min=\"0\" max=\"59\">\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Web-Clock';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\n    <title>Clock</title>\n  </head>\n\n  <body>\n    <div class=\"page\">\n        <h1>Clock</h1>\n        <div class=\"container\" >\n            <!-- <div class=\"clock type1\">World Clock</div>\n            <div class=\"clock type2\">Alarm</div>\n            <div class=\"clock type3\">Stopwatch</div>\n            <div class=\"clock type4\">Timer</div> -->\n\n            <button mat-raised-button color=\"primary\">Primary</button>\n            \n        </div>\n        <div class=\"content\">\n          <div class=\"box\"> box</div>\n          <app-timer>\n          </app-timer>\n        </div>\n      <!-- <div class=\"cabecera__bloque1\"></div> -->\n      <!-- <div class=\"cabecera__bloque2\"><h1>Clcck</h1></div> -->\n    </div>\n    <!-- <article class=\"articulo\">\n      <p>\n      </p>\n    </article> -->\n  </body>\n</html>\n\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TimerComponent } from './timer/timer.component';\n\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}