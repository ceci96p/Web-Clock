{"version":3,"sources":["webpack:///src/app/timer/timer.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TimerComponent","hours","minutes","seconds","environment","production","AppComponent","title","hello","console","log","myFunction","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  constructor() { \n    var hours:number = 0;\n    var minutes:number = 0;\n    var seconds:number = 0;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Clock';\n  \n\n  myFunction(hello: string) {\n    console.log(hello);\n}\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\n    <title>title</title>\n  </head>\n  <body class=\"mat-app-background\">\n    <div class=\"page\">\n        <h1>Clock</h1>\n        <div  class=\"menu-container\" >\n            <button mat-raised-button class=\"clock type1\">World Clock</button>\n            <button mat-raised-button class=\"clock type2\">Alarm</button>\n            <button mat-raised-button class=\"clock type3\">Stopwatch</button>\n            <button mat-raised-button class=\"clock type4\" (click)=\"myFunction('hello')\">Timer</button>\n        </div>\n        <div class=\"content\">\n          <!-- <div class=\"box\"> box</div> -->\n          <app-timer>\n          </app-timer>\n        </div>\n    </div>\n  </body>\n</html>\n\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TimerComponent } from './timer/timer.component';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRippleModule} from '@angular/material/core';\nimport {BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatRippleModule,\n    BrowserAnimationsModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}